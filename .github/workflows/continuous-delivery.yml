name: Continuous Delivery

on:
  push:
    branches: [ development ]
      # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_core_service:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push Core Service
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_core:latest
          context: ./backend
          file: ./backend/EasySpeak.Core/Dockerfile
          build-args: PROJECT_PORT=5050
          push: true

  build_notifier_service:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push Notifier Service
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_notifier:latest
          context: ./backend
          file: ./backend/EasySpeak.Notifier/Dockerfile
          build-args: PROJECT_PORT=5070
          push: true

  build_emailer_service:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push Emailer Service
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_emailer:latest
          context: ./backend
          file: ./backend/EasySpeak.Emailer/Dockerfile
          build-args: PROJECT_PORT=5090
          push: true

  build_communicator_service:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push Communicator Service
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_communicator:latest
          context: ./backend
          file: ./backend/EasySpeak.Communicator/Dockerfile
          build-args: PROJECT_PORT=5080
          push: true

  build_recommendator_service:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Build and push Recommendator Service
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_recommendator_service:latest
          context: ./backend
          file: ./backend/EasySpeak.RecommendationService/Dockerfile
          build-args: PROJECT_PORT=5110
          push: true

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build Frontend
        uses: docker/build-push-action@v4
        with:
          tags: tatihutii/easyspeak_frontend:latest
          context: ./frontend
          push: true

  deploy_images:
    runs-on: ubuntu-latest
    needs: [ build_core_service, build_notifier_service, build_emailer_service, build_communicator_service, build_recommendator_service, build_frontend ]
    steps:
    - uses: actions/checkout@v3
    - name: Update PROD images
      uses: appleboy/ssh-action@master
      with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.HOST_USERNAME }}
         password: ${{ secrets.HOST_PASSWORD }}
         script: cd ~/bsa-winter-2022-2023-easyspeak && sudo docker-compose -f docker-compose.apps.prod.yml stop && sudo docker-compose -f docker-compose.apps.prod.yml pull && sudo docker system prune -f && sudo docker-compose -f docker-compose.apps.prod.yml up -d
