// <auto-generated />
using System;
using EasySpeak.Core.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasySpeak.Core.DAL.Migrations
{
    [DbContext(typeof(EasySpeakCoreContext))]
    partial class EasySpeakCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<long>("ChatsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("ChatsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ChatUser");

                    b.HasData(
                        new
                        {
                            ChatsId = 1L,
                            UsersId = 1L
                        },
                        new
                        {
                            ChatsId = 2L,
                            UsersId = 1L
                        },
                        new
                        {
                            ChatsId = 3L,
                            UsersId = 1L
                        },
                        new
                        {
                            ChatsId = 4L,
                            UsersId = 1L
                        },
                        new
                        {
                            ChatsId = 5L,
                            UsersId = 2L
                        },
                        new
                        {
                            ChatsId = 6L,
                            UsersId = 2L
                        },
                        new
                        {
                            ChatsId = 7L,
                            UsersId = 2L
                        },
                        new
                        {
                            ChatsId = 8L,
                            UsersId = 2L
                        },
                        new
                        {
                            ChatsId = 9L,
                            UsersId = 3L
                        },
                        new
                        {
                            ChatsId = 10L,
                            UsersId = 3L
                        },
                        new
                        {
                            ChatsId = 11L,
                            UsersId = 3L
                        },
                        new
                        {
                            ChatsId = 12L,
                            UsersId = 3L
                        },
                        new
                        {
                            ChatsId = 13L,
                            UsersId = 4L
                        },
                        new
                        {
                            ChatsId = 14L,
                            UsersId = 4L
                        },
                        new
                        {
                            ChatsId = 15L,
                            UsersId = 4L
                        },
                        new
                        {
                            ChatsId = 16L,
                            UsersId = 4L
                        },
                        new
                        {
                            ChatsId = 17L,
                            UsersId = 5L
                        },
                        new
                        {
                            ChatsId = 18L,
                            UsersId = 5L
                        },
                        new
                        {
                            ChatsId = 19L,
                            UsersId = 5L
                        },
                        new
                        {
                            ChatsId = 20L,
                            UsersId = 5L
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Call", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.EasySpeakFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("EasySpeakFiles");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Friend", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("FriendshipStatus")
                        .HasColumnType("int");

                    b.Property<long>("RequesterId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequesterId");

                    b.HasIndex("UserId");

                    b.ToTable("Friends");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 3L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 1L,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 2L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 3L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 5L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 3L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 1,
                            RequesterId = 5L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 1,
                            RequesterId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 4L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 1,
                            RequesterId = 3L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 1,
                            RequesterId = 5L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 1L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 3L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 5L,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 4L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 2,
                            RequesterId = 5L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FriendshipStatus = 0,
                            RequesterId = 5L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageLevel")
                        .HasColumnType("int");

                    b.Property<int?>("LimitOfUsers")
                        .HasColumnType("int");

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YoutubeVideoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoomMeetingLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoomMeetingLinkHost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 150,
                            MediaPath = "https://picsum.photos/640/480/?image=822",
                            Name = "Mobility",
                            StartAt = new DateTime(2023, 4, 20, 5, 39, 54, 568, DateTimeKind.Utc).AddTicks(9782),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 139,
                            MediaPath = "https://picsum.photos/640/480/?image=232",
                            Name = "brand",
                            StartAt = new DateTime(2023, 4, 28, 7, 4, 30, 405, DateTimeKind.Utc).AddTicks(2189),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 2L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            MediaPath = "https://picsum.photos/640/480/?image=1065",
                            Name = "Oman",
                            StartAt = new DateTime(2023, 4, 7, 17, 24, 52, 871, DateTimeKind.Utc).AddTicks(8972),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 5L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 143,
                            MediaPath = "https://picsum.photos/640/480/?image=157",
                            Name = "Directives",
                            StartAt = new DateTime(2023, 4, 8, 12, 1, 17, 422, DateTimeKind.Utc).AddTicks(3002),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 5L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            MediaPath = "https://picsum.photos/640/480/?image=576",
                            Name = "Platinum",
                            StartAt = new DateTime(2023, 4, 25, 23, 15, 50, 87, DateTimeKind.Utc).AddTicks(5649),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 4L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            MediaPath = "https://picsum.photos/640/480/?image=345",
                            Name = "SDD",
                            StartAt = new DateTime(2023, 4, 6, 15, 15, 36, 36, DateTimeKind.Utc).AddTicks(7593),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 52,
                            MediaPath = "https://picsum.photos/640/480/?image=60",
                            Name = "complexity",
                            StartAt = new DateTime(2023, 4, 18, 12, 32, 59, 586, DateTimeKind.Utc).AddTicks(5964),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 5L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 153,
                            MediaPath = "https://picsum.photos/640/480/?image=194",
                            Name = "navigating",
                            StartAt = new DateTime(2023, 4, 17, 11, 50, 19, 566, DateTimeKind.Utc).AddTicks(9665),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 180,
                            MediaPath = "https://picsum.photos/640/480/?image=620",
                            Name = "Granite",
                            StartAt = new DateTime(2023, 4, 6, 5, 31, 35, 722, DateTimeKind.Utc).AddTicks(2772),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 2L,
                            IsCanceled = false,
                            LanguageLevel = 0,
                            LimitOfUsers = 22,
                            MediaPath = "https://picsum.photos/640/480/?image=75",
                            Name = "olive",
                            StartAt = new DateTime(2023, 4, 6, 9, 54, 33, 817, DateTimeKind.Utc).AddTicks(7535),
                            YoutubeVideoId = "",
                            ZoomMeetingLink = "",
                            ZoomMeetingLinkHost = ""
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<long>("RelatedTo")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Facere possimus eligendi quisquam ullam iure praesentium numquam sapiente distinctio.",
                            Type = 3,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Voluptatibus ad et adipisci hic amet ratione corporis.",
                            Type = 3,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "A provident rerum nemo dolores debitis dicta voluptatem.",
                            Type = 1,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ipsam adipisci illo quidem.",
                            Type = 2,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ea dolor animi quod laborum quia perspiciatis sunt tempora.",
                            Type = 3,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Est quasi incidunt perferendis.",
                            Type = 4,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Voluptatem beatae vitae sunt a ut sed.",
                            Type = 4,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Eos enim consequatur et praesentium ad ut beatae eius.",
                            Type = 4,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Error et velit autem ipsa atque consequuntur vitae sit.",
                            Type = 4,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Nisi omnis quia est facilis rem architecto laboriosam.",
                            Type = 3,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "In occaecati perspiciatis.",
                            Type = 4,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = true,
                            RelatedTo = 0L,
                            Text = "Recusandae perspiciatis pariatur quod eum sint molestiae quis neque tempora.",
                            Type = 3,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Nobis nulla dignissimos voluptas nemo cumque tenetur quod et placeat.",
                            Type = 2,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Eos similique fuga enim.",
                            Type = 2,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Velit magnam placeat voluptatem itaque.",
                            Type = 1,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ut atque dolore accusantium soluta cumque perferendis labore magni adipisci.",
                            Type = 2,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ratione et quibusdam consequatur voluptatem velit expedita eos maxime.",
                            Type = 3,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Quia nobis iusto aspernatur nihil iure ut blanditiis veritatis.",
                            Type = 4,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Illum quod atque nulla voluptas quos beatae.",
                            Type = 4,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ab placeat tenetur perferendis et omnis.",
                            Type = 1,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = true,
                            RelatedTo = 0L,
                            Text = "Deserunt sint enim ex sit culpa.",
                            Type = 3,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Necessitatibus doloremque omnis facilis unde exercitationem consectetur culpa porro.",
                            Type = 3,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Vel rem rerum eum harum.",
                            Type = 1,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Est officia accusamus doloremque perferendis ea.",
                            Type = 3,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Laudantium ut amet repellendus enim consequatur.",
                            Type = 3,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Sed expedita dolorem aperiam ipsa omnis.",
                            Type = 1,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ipsa quia cupiditate iure necessitatibus asperiores corporis doloremque corporis.",
                            Type = 3,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Consectetur enim rerum consectetur magnam perspiciatis ut rem.",
                            Type = 1,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Aut modi corrupti corrupti.",
                            Type = 3,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = true,
                            RelatedTo = 0L,
                            Text = "Explicabo provident omnis culpa earum modi eos.",
                            Type = 2,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Deleniti labore veritatis dolorum.",
                            Type = 4,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ut sit nulla.",
                            Type = 1,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Voluptas ut itaque nesciunt.",
                            Type = 1,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Molestias porro exercitationem omnis et eius.",
                            Type = 3,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Esse sit quia dolorem sequi.",
                            Type = 2,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Perspiciatis qui dignissimos.",
                            Type = 1,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 37L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = true,
                            RelatedTo = 0L,
                            Text = "Saepe facere eos eum perferendis nisi.",
                            Type = 1,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 38L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Repudiandae ut nobis voluptas rerum ullam.",
                            Type = 4,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 39L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Ea voluptatibus voluptas sint et et asperiores omnis recusandae saepe.",
                            Type = 2,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 40L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            RelatedTo = 0L,
                            Text = "Non consequatur voluptatem in aut quia quo quo.",
                            Type = 2,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 9L,
                            Topic = "input Singapore Dollar functionalities Field Branding impactful"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 5L,
                            Topic = "Engineer Intelligent Frozen Mouse Incredible Metal Hat Platinum Thailand"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 4L,
                            Topic = "Fresh Incredible"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 5L,
                            Topic = "Concrete complexity"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 8L,
                            Topic = "Savings Account"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 7L,
                            Topic = "navigating plum pixel"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 10L,
                            Topic = "New Hampshire"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 4L,
                            Topic = "EXE olive"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 9L,
                            Topic = "Advanced"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 4L,
                            Topic = "generate Ergonomic Steel Towels Functionality South Carolina Accountability"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 2L,
                            Topic = "ability"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 10L,
                            Topic = "Gardens revolutionary Universal input"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 6L,
                            Topic = "deposit auxiliary Avon Intelligent"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 7L,
                            Topic = "SMTP enterprise"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 4L,
                            Topic = "Credit Card Account Avon"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 10L,
                            Topic = "Ridges Awesome Malta"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 1L,
                            Topic = "optical Infrastructure"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 5L,
                            Topic = "interface Israel orchestrate Balanced invoice Peso Uruguayo"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 9L,
                            Topic = "B2C Platinum system"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LessonId = 4L,
                            Topic = "navigating fuchsia New York hybrid flexibility"
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Subquestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Subquestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 19L,
                            Text = "Possimus eligendi quisquam ullam iure praesentium numquam sapiente distinctio.\nMolestias tempore voluptatibus ad et.\nHic amet ratione corporis.\nCupiditate soluta a provident rerum nemo dolores debitis.\nVoluptatem labore dolores."
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 18L,
                            Text = "Adipisci illo quidem sit dolores."
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 18L,
                            Text = "Dolor animi quod laborum quia perspiciatis.\nTempora rerum cupiditate velit est quasi incidunt.\nOmnis voluptas quas.\nBeatae vitae sunt a.\nSed repellendus sapiente accusamus eos."
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1L,
                            Text = "Et praesentium ad.\nBeatae eius sint omnis voluptas."
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 6L,
                            Text = "Velit autem ipsa atque consequuntur vitae sit nostrum.\nSoluta nisi omnis quia est facilis rem architecto laboriosam.\nCumque dicta in occaecati perspiciatis amet autem."
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 12L,
                            Text = "Perspiciatis pariatur quod eum sint molestiae quis neque tempora ab.\nAut nobis nulla dignissimos voluptas nemo cumque tenetur.\nEt placeat voluptas nihil sit eos similique fuga.\nDolores ullam suscipit velit magnam.\nVoluptatem itaque sapiente et saepe ut atque dolore."
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1L,
                            Text = "Cumque perferendis labore magni adipisci labore corrupti quo."
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 18L,
                            Text = "Quibusdam consequatur voluptatem velit expedita eos maxime."
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 9L,
                            Text = "Facere quia nobis iusto aspernatur nihil iure ut.\nVeritatis quas hic et illum quod.\nNulla voluptas quos beatae quaerat consequatur.\nAb placeat tenetur perferendis et omnis.\nDoloremque corrupti deserunt sint enim ex sit."
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 14L,
                            Text = "Impedit aut necessitatibus doloremque.\nFacilis unde exercitationem consectetur culpa porro consequatur sed aliquam.\nRem rerum eum harum est ratione voluptate est officia."
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 14L,
                            Text = "Perferendis ea maiores.\nIure laudantium ut amet repellendus enim consequatur.\nPorro voluptate sed expedita dolorem aperiam ipsa omnis dolores.\nOmnis ipsa quia cupiditate.\nNecessitatibus asperiores corporis doloremque corporis nesciunt."
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 20L,
                            Text = "Consectetur enim rerum consectetur magnam perspiciatis ut rem.\nOdit dolorem aut modi corrupti corrupti qui.\nPerspiciatis explicabo provident omnis culpa earum modi eos.\nAutem consectetur deleniti."
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 6L,
                            Text = "Dolorum ut omnis.\nUt sit nulla."
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 19L,
                            Text = "Voluptatem voluptas ut itaque.\nEsse neque ea molestias.\nExercitationem omnis et eius pariatur est consequatur esse.\nQuia dolorem sequi doloribus corporis."
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 16L,
                            Text = "Qui dignissimos voluptatum qui in saepe facere."
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1L,
                            Text = "Perferendis nisi alias et ducimus repudiandae.\nNobis voluptas rerum ullam omnis placeat non ea voluptatibus voluptas.\nEt et asperiores omnis recusandae saepe laborum.\nPorro non consequatur voluptatem in.\nQuia quo quo."
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 7L,
                            Text = "Aliquid aut quaerat adipisci rem.\nEa maxime doloribus qui."
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 14L,
                            Text = "Nesciunt quidem vel.\nQuibusdam iure labore velit.\nQui dolor velit."
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1L,
                            Text = "Ducimus perspiciatis nostrum ut repudiandae."
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 14L,
                            Text = "Et velit harum ex."
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 11L,
                            Text = "Omnis in voluptatem dolorum debitis velit eos.\nSoluta voluptatem officiis voluptate.\nMollitia at aliquam ut nihil veritatis.\nSequi omnis vel qui.\nDeleniti nihil non perspiciatis modi placeat dolor molestiae."
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 8L,
                            Text = "Quo a eum corporis repellat dolor fugit voluptas.\nEsse itaque laudantium dolores quis ea excepturi.\nNostrum quo consequatur est omnis cumque reiciendis qui omnis non.\nPraesentium enim explicabo atque culpa repudiandae perferendis ullam.\nEa et aut."
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 7L,
                            Text = "Quis aperiam nihil."
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 5L,
                            Text = "Rerum sit impedit illum corrupti non et voluptates architecto quaerat."
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 13L,
                            Text = "Modi magnam qui corporis magnam quia blanditiis rerum qui ad.\nDignissimos non tempora.\nVoluptas omnis rem nam ad vel pariatur nostrum.\nFacere blanditiis id enim vitae alias.\nIpsa eius dolores nulla est officia quo eaque quo dolore."
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 13L,
                            Text = "Consequatur quia ut nostrum voluptatem."
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 13L,
                            Text = "Voluptatem id deserunt in.\nQuis a aut unde quibusdam quisquam sit.\nCulpa suscipit voluptatem modi doloremque eum perferendis quod ab."
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 7L,
                            Text = "Doloremque magnam quas molestiae ex corrupti neque laboriosam et voluptates.\nSuscipit ducimus facilis ut rem assumenda laborum neque labore.\nEt voluptas omnis doloremque aut ipsa voluptatem aut praesentium et."
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 14L,
                            Text = "Rerum unde ad accusamus."
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 2L,
                            Text = "Veritatis quidem eum eum saepe minus repellat."
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 3L,
                            Text = "Veritatis voluptates dolore magni rerum velit sapiente.\nEt quod saepe aliquam dignissimos ut praesentium laboriosam deleniti placeat.\nAut aspernatur optio animi."
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 17L,
                            Text = "Aspernatur animi est soluta iusto doloremque doloremque non laudantium velit.\nNumquam corporis numquam ut soluta qui aliquid magni eos commodi.\nId et ipsa velit maiores eum assumenda.\nConsequatur enim excepturi eos temporibus mollitia."
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 6L,
                            Text = "Corrupti impedit eos qui voluptatibus.\nCorrupti consequuntur dolor provident velit consequuntur excepturi nisi."
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 20L,
                            Text = "Fuga deleniti et nobis rerum voluptatem quae.\nOmnis voluptatibus fugiat distinctio.\nNeque molestiae autem quia corporis et quam minima."
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 8L,
                            Text = "Eaque iusto repudiandae ut qui et rerum ut.\nVoluptas sint excepturi.\nQui tempore rerum laudantium nam.\nDelectus repellat et eum nihil perferendis odit dolorem."
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1L,
                            Text = "Deleniti ab ipsam maiores.\nEum magnam est temporibus mollitia sunt sed perferendis vel.\nRepellendus et sed facilis et distinctio in possimus et.\nRerum ipsum id corrupti eius nisi aut voluptas.\nPerspiciatis temporibus animi cupiditate laudantium ut quam repudiandae tempore."
                        },
                        new
                        {
                            Id = 37L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 12L,
                            Text = "Pariatur maiores illo."
                        },
                        new
                        {
                            Id = 38L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 8L,
                            Text = "Commodi maiores sit voluptatem omnis beatae nostrum cumque."
                        },
                        new
                        {
                            Id = 39L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 4L,
                            Text = "Expedita facilis labore sunt.\nVoluptas minima aliquam ut doloremque."
                        },
                        new
                        {
                            Id = 40L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 4L,
                            Text = "Expedita quod incidunt maxime."
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "ArtistPalette.svg",
                            Name = "Arts"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Briefcase.svg",
                            Name = "Business"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "ClassicalBuilding.svg",
                            Name = "Culture"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "GraduationCap.svg",
                            Name = "Education"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Kite.svg",
                            Name = "Environment"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Dress.svg",
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Sandwich.svg",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Dna.svg",
                            Name = "Health"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "CrossedSwords.svg",
                            Name = "History"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Books.svg",
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "ClapperBoard.svg",
                            Name = "Movies"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Drum.svg",
                            Name = "Music"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "FourLeafClover.svg",
                            Name = "Nature"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "FaceWithMonocle.svg",
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "TopHat.svg",
                            Name = "Politics"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "TestTube.svg",
                            Name = "Science"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "MobilePhone.svg",
                            Name = "Social Media"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "BoxingGlove.svg",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "Robot.svg",
                            Name = "Technologies"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "DesertIsland.svg",
                            Name = "Travel"
                        });
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmojiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("LanguageLevel")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Timezone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BirthDate = new DateTime(2003, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 196,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Della.Rosenbaum@yahoo.com",
                            EmojiName = "",
                            FirstName = "Della",
                            IsAdmin = true,
                            IsBanned = false,
                            IsSubscribed = true,
                            Language = 175,
                            LanguageLevel = 2,
                            LastName = "Rosenbaum",
                            Sex = 1,
                            Status = 0,
                            Timezone = 275
                        },
                        new
                        {
                            Id = 2L,
                            BirthDate = new DateTime(2003, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 215,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Randall_Hegmann56@hotmail.com",
                            EmojiName = "",
                            FirstName = "Randall",
                            IsAdmin = true,
                            IsBanned = false,
                            IsSubscribed = true,
                            Language = 103,
                            LanguageLevel = 0,
                            LastName = "Hegmann",
                            Sex = 1,
                            Status = 1,
                            Timezone = 197
                        },
                        new
                        {
                            Id = 3L,
                            BirthDate = new DateTime(2003, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 68,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alfred89@hotmail.com",
                            EmojiName = "",
                            FirstName = "Alfred",
                            IsAdmin = true,
                            IsBanned = false,
                            IsSubscribed = true,
                            Language = 65,
                            LanguageLevel = 2,
                            LastName = "Rohan",
                            Sex = 2,
                            Status = 2,
                            Timezone = 6
                        },
                        new
                        {
                            Id = 4L,
                            BirthDate = new DateTime(2003, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sandra57@gmail.com",
                            EmojiName = "",
                            FirstName = "Sandra",
                            IsAdmin = true,
                            IsBanned = false,
                            IsSubscribed = true,
                            Language = 21,
                            LanguageLevel = 0,
                            LastName = "Satterfield",
                            Sex = 2,
                            Status = 1,
                            Timezone = 71
                        },
                        new
                        {
                            Id = 5L,
                            BirthDate = new DateTime(2003, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 236,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Frances.Lemke37@gmail.com",
                            EmojiName = "",
                            FirstName = "Frances",
                            IsAdmin = false,
                            IsBanned = false,
                            IsSubscribed = true,
                            Language = 55,
                            LanguageLevel = 3,
                            LastName = "Lemke",
                            Sex = 2,
                            Status = 3,
                            Timezone = 175
                        });
                });

            modelBuilder.Entity("LessonTag", b =>
                {
                    b.Property<long>("LessonsId")
                        .HasColumnType("bigint");

                    b.Property<long>("TagsId")
                        .HasColumnType("bigint");

                    b.HasKey("LessonsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("LessonTag");

                    b.HasData(
                        new
                        {
                            LessonsId = 1L,
                            TagsId = 1L
                        },
                        new
                        {
                            LessonsId = 2L,
                            TagsId = 2L
                        },
                        new
                        {
                            LessonsId = 3L,
                            TagsId = 3L
                        },
                        new
                        {
                            LessonsId = 4L,
                            TagsId = 4L
                        },
                        new
                        {
                            LessonsId = 5L,
                            TagsId = 5L
                        },
                        new
                        {
                            LessonsId = 6L,
                            TagsId = 6L
                        },
                        new
                        {
                            LessonsId = 7L,
                            TagsId = 7L
                        },
                        new
                        {
                            LessonsId = 8L,
                            TagsId = 8L
                        },
                        new
                        {
                            LessonsId = 9L,
                            TagsId = 9L
                        },
                        new
                        {
                            LessonsId = 10L,
                            TagsId = 10L
                        });
                });

            modelBuilder.Entity("LessonUser", b =>
                {
                    b.Property<long>("LessonsId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubscribersId")
                        .HasColumnType("bigint");

                    b.HasKey("LessonsId", "SubscribersId");

                    b.HasIndex("SubscribersId");

                    b.ToTable("LessonUser");

                    b.HasData(
                        new
                        {
                            LessonsId = 1L,
                            SubscribersId = 1L
                        },
                        new
                        {
                            LessonsId = 2L,
                            SubscribersId = 1L
                        },
                        new
                        {
                            LessonsId = 3L,
                            SubscribersId = 2L
                        },
                        new
                        {
                            LessonsId = 4L,
                            SubscribersId = 2L
                        },
                        new
                        {
                            LessonsId = 5L,
                            SubscribersId = 3L
                        },
                        new
                        {
                            LessonsId = 6L,
                            SubscribersId = 3L
                        },
                        new
                        {
                            LessonsId = 7L,
                            SubscribersId = 4L
                        },
                        new
                        {
                            LessonsId = 8L,
                            SubscribersId = 4L
                        },
                        new
                        {
                            LessonsId = 9L,
                            SubscribersId = 5L
                        },
                        new
                        {
                            LessonsId = 10L,
                            SubscribersId = 5L
                        });
                });

            modelBuilder.Entity("TagUser", b =>
                {
                    b.Property<long>("TagsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("TagsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("TagUser");

                    b.HasData(
                        new
                        {
                            TagsId = 1L,
                            UsersId = 1L
                        },
                        new
                        {
                            TagsId = 2L,
                            UsersId = 1L
                        },
                        new
                        {
                            TagsId = 3L,
                            UsersId = 1L
                        },
                        new
                        {
                            TagsId = 4L,
                            UsersId = 2L
                        },
                        new
                        {
                            TagsId = 5L,
                            UsersId = 2L
                        },
                        new
                        {
                            TagsId = 6L,
                            UsersId = 2L
                        },
                        new
                        {
                            TagsId = 7L,
                            UsersId = 3L
                        },
                        new
                        {
                            TagsId = 8L,
                            UsersId = 3L
                        },
                        new
                        {
                            TagsId = 9L,
                            UsersId = 3L
                        },
                        new
                        {
                            TagsId = 10L,
                            UsersId = 4L
                        },
                        new
                        {
                            TagsId = 11L,
                            UsersId = 4L
                        },
                        new
                        {
                            TagsId = 12L,
                            UsersId = 4L
                        },
                        new
                        {
                            TagsId = 13L,
                            UsersId = 5L
                        },
                        new
                        {
                            TagsId = 14L,
                            UsersId = 5L
                        },
                        new
                        {
                            TagsId = 15L,
                            UsersId = 5L
                        });
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySpeak.Core.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Call", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Chat", "Chat")
                        .WithMany("Calls")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Friend", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.User", "Requester")
                        .WithMany("Users")
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EasySpeak.Core.DAL.Entities.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requester");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Lesson", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.User", "User")
                        .WithMany("CreatedLessons")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Message", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Notification", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Question", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Lesson", "Lesson")
                        .WithMany("Questions")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Subquestion", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Question", "Question")
                        .WithMany("Subquestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.User", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.EasySpeakFile", "Image")
                        .WithOne("User")
                        .HasForeignKey("EasySpeak.Core.DAL.Entities.User", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("LessonTag", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySpeak.Core.DAL.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LessonUser", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySpeak.Core.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("SubscribersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TagUser", b =>
                {
                    b.HasOne("EasySpeak.Core.DAL.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySpeak.Core.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Chat", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.EasySpeakFile", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Lesson", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.Question", b =>
                {
                    b.Navigation("Subquestions");
                });

            modelBuilder.Entity("EasySpeak.Core.DAL.Entities.User", b =>
                {
                    b.Navigation("CreatedLessons");

                    b.Navigation("Friends");

                    b.Navigation("Notifications");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
